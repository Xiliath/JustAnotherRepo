name: Build, Push, and Deploy

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push Web API image
        run: |
          docker build -t ghcr.io/${{ github.actor }}/myawesomeapp.webapi:latest -f MyAwesomeApp.WebApi/Dockerfile .
          docker push ghcr.io/${{ github.actor }}/myawesomeapp.webapi:latest

      - name: Build and push CronJob image
        run: |
          docker build -t ghcr.io/${{ github.actor }}/myawesomeapp.cronjob:latest -f MyAwesomeApp.CronJob/Dockerfile .
          docker push ghcr.io/${{ github.actor }}/myawesomeapp.cronjob:latest

      - name: Update Umbrella Chart Versions
        run: |
          # Extract versions from the csproj files
          WEBAPI_VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" MyAwesomeApp.WebApi/MyAwesomeApp.WebApi.csproj)
          CRONJOB_VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" MyAwesomeApp.CronJob/MyAwesomeApp.CronJob.csproj)
          echo "WebApi version: $WEBAPI_VERSION"
          echo "CronJob version: $CRONJOB_VERSION"
          # Compose a new umbrella version (for example, based on the WebApi version and the run number)
          NEW_UMBRELLA_VERSION="${WEBAPI_VERSION}-${GITHUB_RUN_NUMBER}"
          echo "New umbrella chart version: $NEW_UMBRELLA_VERSION"
          # Update the umbrella chart's version and appVersion in charts/umbrella-chart/Chart.yaml
          sed -i "s/^version:.*/version: $NEW_UMBRELLA_VERSION/" charts/umbrella-chart/Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: $NEW_UMBRELLA_VERSION/" charts/umbrella-chart/Chart.yaml
          # Update dependency versions for mywebapi and mycronjob subcharts
          sed -i "/- name: mywebapi/{n;s/version: .*/    version: $WEBAPI_VERSION/}" charts/umbrella-chart/Chart.yaml
          sed -i "/- name: mycronjob/{n;s/version: .*/    version: $CRONJOB_VERSION/}" charts/umbrella-chart/Chart.yaml
          echo "Updated umbrella chart:"
          cat charts/umbrella-chart/Chart.yaml

      - name: Release Helm Charts with Chart Releaser
        uses: helm/chart-releaser-action@v1.7.0
        with:
          skip_existing: true
          charts_dir: charts
        env:
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CR_OWNER: ${{ github.repository_owner }}
          CR_REPO: ${{ github.event.repository.name }}
          CR_FORCE: "true"

      - name: Deploy Umbrella Chart with Helm
        run: |
          helm repo add myrepo https://${{ github.actor }}.github.io/${{ github.event.repository.name | tolower }}/
          helm repo update
          helm upgrade --install myawesomeapp myrepo/myawesomeapp --atomic --timeout 300s
